syntax="proto3";

package nvm;

option cc_generic_services = true;

// H2
message HttpRequest { };
message HttpResponse { };

service UserService {
rpc search(HttpRequest) returns (HttpResponse);
rpc insert(HttpRequest) returns (HttpResponse);
rpc upsert(HttpRequest) returns (HttpResponse);
rpc query(HttpRequest) returns (HttpResponse);
};

service ProxyService {
rpc upsert(HttpRequest) returns (HttpResponse);
rpc search(HttpRequest) returns (HttpResponse);
rpc topology(HttpRequest) returns (HttpResponse);
};


service AdminService {
rpc snapshot(HttpRequest) returns (HttpResponse);
rpc SetLeader(HttpRequest) returns (HttpResponse);
rpc AddFollower(HttpRequest) returns (HttpResponse);
rpc ListNode(HttpRequest) returns (HttpResponse);
rpc GetNode(HttpRequest) returns (HttpResponse);
};

